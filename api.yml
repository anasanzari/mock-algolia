openapi: 3.0.1
info:
  title: Algolia Mock API
  description: A mock server for Algolia
  contact:
    email: 'davesag@gmail.com'
  license:
    name: 'MIT'
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
servers:
- url: /1
tags:
- name: root
  description: Root level API routes
- name: indices
  description: Routes that manipulate indices
paths:
  /:
    get:
      tags:
      - root
      servers:
      - url: /
      summary: Display API version information
      operationId: versions
      responses:
        200:
          description: Information about the available API Versions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
  /ping:
    get:
      tags:
      - root
      servers:
      - url: /
      summary: Checks that the server is alive
      operationId: ping
      responses:
        200:
          description: 'Information about the server'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
  /indexes/{name}:
    post:
      tags:
      - indices
      summary: Add a record to an index
      operationId: v1_indices_addObject
      parameters:
        - name: name
          in: path
          description: The index name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlgoliaData'
      responses:
        200:
          description: 'Response to an Add an Object to an Index Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlgoliaResponse'
  /indexes/{name}/batch:
    post:
      tags:
      - indices
      summary: Perform an action on a collection of objects given a named index
      operationId: v1_indices_bulkActions
      parameters:
        - name: name
          in: path
          description: The index name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRequestsBody'
      responses:
        200:
          description: 'Responds with the objectIds that were acted upon'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationResponse'
  /indexes/{name}/{objectID}:
    put:
      tags:
        - indices
      summary: Replace the object with the supplied objectID for the index with the given name with the data in the request body
      operationId: v1_indices_replaceObject
      parameters:
        - name: name
          in: path
          description: The index name
          required: true
          schema:
            type: string
        - name: objectID
          in: path
          description: The object's objectID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlgoliaData'
      responses:
        200:
          description: 'Gives the objectID that was updated'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlgoliaResponse'
    delete:
      tags:
        - indices
      summary: Delete the object with the supplied objectID for the index with the given name
      operationId: v1_indices_deleteObject
      parameters:
        - name: name
          in: path
          description: The index name
          required: true
          schema:
            type: string
        - name: objectID
          in: path
          description: The object's objectID
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Gives the objectId that was deleted'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlgoliaResponse'
  /indexes/{name}/{objectID}/partial:
    post:
      tags:
        - indices
      summary: Update the object with the supplied objectID for the index with the given name using the data in the request body
      operationId: v1_indices_updateObject
      parameters:
        - name: name
          in: path
          description: The index name
          required: true
          schema:
            type: string
        - name: objectID
          in: path
          description: The object's objectID
          required: true
          schema:
            type: string
        - name: createIfNotExists
          in: query
          description: 'Defaults to true'
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlgoliaData'
      responses:
        200:
          description: 'The objectID of the updated or created object'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlgoliaResponse'
components:
  schemas:
    PingResponse:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        version:
          type: string
        uptime:
          type: number
    APIVersion:
      type: object
      properties:
        version:
          type: integer
          description: The API's version number
        path:
          type: string
          description: The relative path to the API
    VersionResponse:
      type: array
      items:
        $ref: '#/components/schemas/APIVersion'
    AlgoliaData:
      type: object
      properties:
        objectID:
          type: string
      additionalProperties: true
    AlgoliaRequest:
      type: object
      properties:
        action:
          type: string
          enum:
            - addObject
            - updateObject
            - partialUpdateObject
            - deleteObject
        objectID:
          type: string
        body:
          $ref: '#/components/schemas/AlgoliaData'
    AlgoliaResponse:
      type: object
      properties:
        objectID:
          type: string
        taskID:
          type: number
    BulkRequestsBody:
      type:  object
      properties:
        requests:
          type: array
          items:
            $ref: '#/components/schemas/AlgoliaRequest'
    BulkOperationResponse:
      type: object
      properties:
        objectIDs:
          type: array
          items:
            type: string
        taskID:
          type: number
